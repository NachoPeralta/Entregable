<h1>{{title}}</h1>
<h3>{{cartInfo}}</h3>
<div>
  <table border="1">
    <thead>
      <tr>
        <th>Código</th>
        <th>Nombre</th>
        <th>Descripción</th>
        <th>Cantidad</th>
        <th>Precio Unidad</th>

      </tr>
    </thead>
    <tbody>
      {{#each products}}
        <tr>
          <td>{{this.product.code}}</td>
          <td>{{this.product.title}}</td>
          <td>{{this.product.description}}</td>
          <td>{{this.quantity}}</td>
          <td>{{this.product.price}}</td>
          <td>
            <button class="btnDeleteProductFromCart" 
              onclick="deleteProduct('{{../cartId}}', '{{this.product._id}}')"
              >Eliminar</button>
          </td>
        </tr>
      {{/each}}
    </tbody>
  </table>
  <br>
  <button onclick="emptyCart('{{cartId}}')" >Vaciar Carrito</button>
  <br>
  <h4>Total a Pagar:{{totalBuy}}</h4>
  <br>
  <button onclick="endPurchase('{{cartId}}')">Terminar Compra</button>
  <br>
</div>
<br>
{{#if hasTicket}}
    <h2>Ticket de Compra</h2>
    <h4>Comprador:</h4>
    <p>{{purchaser.first_name}} {{purchaser.last_name}}</p>
    <p>{{purchaser.email}}</p>
    <h4>Código: {{ticket.code}}</h4>
    <h4>Fecha Emisión: {{ticket.purchase_datetime}}</h4>
    <h4>Total Compra: {{ticket.amount}}</h4>
{{/if}}
<br />
<br>
<a href="/products">Tienda</a>
<br />
<a href="/chat">Chat en vivo</a>
<br />

<script>
    function deleteProduct(cartId, productId) {
        fetch(`/api/carts/${cartId}/products/${productId}`, {
            method: 'DELETE'
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error al eliminar el producto del carrito');
                }
                location.reload();
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }

    function emptyCart(cartId) {
        fetch(`/api/carts/${cartId}`, {
            method: 'DELETE'
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error al vaciar el carrito');
                }
                location.reload();
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }
    /*function endPurchase(cartId) {
        fetch(`/api/carts/${cartId}/purchase`, {
            method: 'POST'
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error al finalizar la compra');
                }
                location.reload();
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }*/

    function endPurchase(cartId) {
    fetch(`/api/carts/${cartId}/purchase`, {
        method: 'POST'
    })
        .then(response => {
            if (!response.ok) {
                throw new Error('Error al finalizar la compra');
            }
            // Obtener el ID del ticket de la respuesta
            return response.json();
        })
        .then(data => {
            const ticketId = data.ticketId;
            const cartId = data.cartId;
            // Redirijo a la página actual pero con detalles del ticket
            window.location.href = `/endPurchase/${cartId}/ticket/${ticketId}`;
        })
        .catch(error => {
            console.error('Error:', error);
        });
}

</script>